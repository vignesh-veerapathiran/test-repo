name: Flask App CI/CD

on:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        run: pytest test_app.py

  build-and-push:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/my_docker_image:flask_ee1

  deploy-to-minikube:
    runs-on: self-hosted  # Runs on YOUR local machine
    needs: build-and-push
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Check if Minikube is Running
        run: |
          if minikube status | grep -q 'Running'; then
            echo "Minikube is already running."
          else
            echo "Starting Minikube..."
            minikube start --driver=docker
          fi

      - name: Pull Docker Image into Minikube
        run: minikube image pull ${{ secrets.DOCKER_USERNAME }}/my_docker_image:flask_ee1

      - name: Apply Kubernetes Manifests
        run: |
          kubectl apply -f /Users/vigneshv/Documents/demo_git/test-repo/k9s/deployment.yaml
          kubectl apply -f /Users/vigneshv/Documents/demo_git/test-repo/k9s/service.yaml

      - name: Wait for Deployment to Be Ready
        run: kubectl rollout status deployment/flask-app

      #- name: Get Minikube Service URL
      #  run: |
      #    minikube service flask-app-service --url > minikube_url.txt
      #    cat minikube_url.txt
      
      #- name: Save Minikube Service URL
      #  run: |
      #    NODE_PORT=$(kubectl get svc flask-app-service -o=jsonpath='{.spec.ports[0].nodePort}')
      #    MINIKUBE_IP=$(minikube ip)
      #    echo "http://$MINIKUBE_IP:$NODE_PORT" > minikube_url.txt
      #    cat minikube_url.txt
      
      - name: Get Minikube Service URL
        run: echo "APP_URL=$(minikube service flask-app-service --url)" >> $GITHUB_ENV

      - name: Print Application URL
        run: echo "Your application is running at: $APP_URL"